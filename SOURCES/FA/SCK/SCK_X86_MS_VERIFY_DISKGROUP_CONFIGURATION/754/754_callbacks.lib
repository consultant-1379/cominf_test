#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

VXDISK=/usr/sbin/vxdisk
VXFENADM=/sbin/vxfenadm

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure



tc_setup() {
#banner setup
	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required
banner "~~~~~~~~~~"
echo -e "\t\tTest: ${SPEC_TC_ID}\n\t\t${SPEC_TC_SLOGAN}"
banner "__________" 

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {
#banner precon
	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
banner test
#getAdmin2Hostname
	# Coded to fail in case TC_AUTOMATED=1 before automation complete
	# Change return code as required
        # Coded to fail in case TC_AUTOMATED=1 before automation complete
        # Change return code as required


        vxfen1count=`${VXDISK} -o alldgs list | grep -i vxfendg1 | wc -l`
        vxfen2count=`${VXDISK} -o alldgs list | grep -i vxfendg2 | wc -l`
        if [ $vxfen1count -eq 3  -a $vxfen2count -eq 3 ];then
                 vxfenadmcount=`${VXFENADM} -d | grep -i running | wc -l`
                 if [ $vxfenadmcount -eq 2 ];then
                 	echo "Fencing disk vxfendg1 and vxfendg2 setup correctly"
                        return 0
                 else
                 	echo "Fencing disk vxfendg1 and vxfendg2 not setup correctly"
                 	return 1
                 fi
        else
                 echo "Fencing disk vxfendg1 not setup correctly"
                 return 1
        fi

 

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {
#banner postcon
	# Coded to fail in case TC_AUTOMATED=1 before automation complete.
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {
#banner cleanup
	# Coded to fail in case TC_AUTOMATED=1 before automation complete
	# Change return code as required

	return 0

}
