#!/bin/bash

# TEST CASE SPEC FILE
# This file is generated/updated using the test framework web interface.
# Manual updates on test servers are lost when the test package is re-installed.
#
# Last modified: Monday 16th of December 2013 10:53:32
#

# These settings must be in BASH script format, they are sourced by other scripts.
SPEC_FA_NAME="SOLARIS10SUNDS"
SPEC_UC_NAME="SOLARIS10SUNDS_Importing_role_alias"
SPEC_TC_ID=1441
SPEC_TC_SLOGAN="Negative: Importing role aliases "
SPEC_TC_TYPE="FT"
SPEC_TC_POLARITY="positive"
SPEC_TC_PRIORITY="high"
SPEC_TC_AUTOMATED=1
SPEC_TC_DEPENDENT_ONLY=0
SPEC_TC_TIMEOUT=300
SPEC_TC_TEST_PASSCODE=0
SPEC_TC_AUTHOR="xvinkat"
SPEC_TC_AUTOMATOR="xvinkat"
# this parameter is not interpreted by harness
SPEC_TC_DISABLED=0

# Please do not remove the comment lines below.
# They are used as section locators by the test harness.

# BEGIN_PRE_CONDITIONS
#<path to the testcase>
#
#
#SUN-DS/COM LDAP - User Management for 
#COM-Enabled Nodes/Management of role/role alias/proxy agents
#/Importing role/rolealias using COM import file    
# END_PRE_CONDITIONS


# BEGIN_MANUAL_STEPS
#1.Specify duplicate alias names in the node export file and validate it.
#
#
#2. Specify an alias name in the node export file which exists as a role name on the ROLE line or as a role name in the LDAP COM branch (case-insensitive name matching) and validate it.
#
#Ex :
#DOMAIN <LDAP_domain_name>
#ROLE <alias1>,<role2>,...<roleN>
#ALIAS <alias1> <role2>,<role3>,...<roleN>
#
#
#3. Specify duplicate ALIAS role names for an alias in node export file and validate it.
#Ex:
#DOMAIN <LDAP_domain_name>
#ROLE <role1>,<role2>,...<roleN>
#ALIAS <alias1> <role1><role1>,<role3>,...<roleN>
#
#4.Specify an ALIAS role name in the node export file which already exist as alias name on another ALIAS line or as an alias name in the LDAP domain COM branch (case-insensitive name matching) and validate it.
#
#Ex: 
#DOMAIN <LDAP_domain_name>
#ALIAS <alias1> <role1>,<role2>,...<roleN>
#ALIAS <role 2> <role3>,<role4>,...<roleN>
#
#5. Specify all alias role names on an ALIAS line which doesn't exist either as role names on the ROLE line (if present) or as role names in the LDAP domain COM branch (case-insensitive name matching) and validate it.
#
#Ex:
#DOMAIN <LDAP_domain_name>
#ROLE role1,role2,role3,role4
#ALIAS <alias1> <role1>,<role2>,...<roleN>
#ALIAS <alias2> <role3>,<role4>,...<roleN>
#
# 
# END_MANUAL_STEPS

# BEGIN_POST_CONDITIONS
#1. Validation should be failed and should report the error to the user.
#
#2.Validation should be failed and should report the error to the user.
#
#3.Validation should be failed and should report the error to the user.
#
#4. Validation should be failed and should report the error to the user.
#
#5.Validation should be failed and should report the error to the user.
#
#
#
# END_POST_CONDITIONS
