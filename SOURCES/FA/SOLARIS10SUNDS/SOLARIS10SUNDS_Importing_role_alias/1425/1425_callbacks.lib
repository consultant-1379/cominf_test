#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure
. /opt/ericsson/cominf_test/harness/lib/tst_LDAP.lib
LDAP_DOMAIN=$(grep "LDAP_DOMAIN" /ericsson/config/config.ini | awk -F"=" '{print $2}')
tuser=t142501

tc_setup() {

    # Left blank intentionally, as derz nothing to setup
    
	return 0
}

#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

        templates=`ls *.tmpl 2>/dev/null | wc -l`
        if [ ${templates} -eq 0 ] ; then
                echo "There are no templates to process"
                return 1
        fi

        LDAP_SERVER_UP || {
                echo "LDAP server is not runningi: $?"
                return 1
        }

        LDAP_DOMAIN_EXISTS $LDAP_DOMAIN || {
                echo "$LDAP_DOMAIN does not exist"
                return 1
        }

        return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
tc_test() {
	
	# Validating the file
	# ACTION 1
        templ=1425-01.tmpl
        expfile=1425-01.exp
        infile=1425-01.in
        sed -e "s/^PPPPPPPP/${LDAP_SUPERUSER_PASSWD}/" < ${templ} > ${infile}
        ${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action1 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "######################################################"
        echo "Validating the file with multiple domain lines "
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
						
	# ACTION 2
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action2 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "######################################################"
        echo "Validating the file without domain name in the file"
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
						
	# ACTION 3 mentioned in the spec file is invalid. Skipping
	
	# ACTION 4 mentioned in the spec file is invalid. Skipping
	
	# ACTION 5
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action3 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "######################################################"
        echo "Validating file with domain mismatch b/w file and cli"
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
	# ACTION 6
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action3 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "######################################################"
        echo "Validating file without mentioning the domain on cli"
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
	# ACTION 7
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action4 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "######################################################"
        echo "Validating file with multiple role lines in the file"
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
						
	# ACTION 8
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action5 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "######################################################"
        echo "Validating file without role names in the file"
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
	# ACTION 9 Skipping since invalid
	# ACTION 10
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action6 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "#######################################################################"
        echo "Validating with a line starting with other than ROLE,DOMAIN OR ALIAS"
        echo "#######################################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
	# ACTION 11 Skipping since invalid
	
	# ACTION 12
		
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "/ericsson/sdee/bin/manage_COM.bsh -a import -d vts.com  -f import_action6 -v " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        return 1
                        }
        echo "#######################################################################"
        echo "Validating role names in the file which exists as an alias name in the COM branch"
        echo "#######################################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null && {
                        echo "Validation Passed. It should fail. : retval $?"
                        return 1
                        }
	return 0

}
 
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete.
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure
tc_cleanup() {
	rm -f *.in *.exp || {
                echo "Problems removing temporary files"
                return 1
        }
    if ! LDAP_SERVER_UP ; then
        echo "LDAP server is not running"
		return 1
    fi
	return 0
}
