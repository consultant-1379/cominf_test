#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure
. ${AT_LIB}/tst_LDAP.lib
LDAP_DOMAIN=$(grep "LDAP_DOMAIN" /ericsson/config/config.ini | awk -F"=" '{print $2}')
tuser=t152201

pkginfo ERICodj 2> /dev/null 
ret=$?

if [[ $ret == 0 ]]; then
        PATH_PRIVS=/ericsson/opendj/bin/manage_COM_privs.bsh
        PATH_ADDUSER=/ericsson/opendj/bin/add_user.sh
        PATH_COM=/ericsson/opendj/bin/manage_COM.bsh
else
        PATH_PRIVS=/ericsson/sdee/bin/manage_COM_privs.bsh
        PATH_ADDUSER=/ericsson/sdee/bin/add_user.sh
        PATH_COM=/ericsson/sdee/bin/manage_COM.bsh
fi

tc_setup() {

        LDAP_USER_EXISTS $LDAP_DOMAIN $tuser && {
                echo "Deleting user $tuser"
                LDAP_DELETE_USER $LDAP_DOMAIN $tuser || {
                        echo "Error while deleting user $tuser"
                        return 1
                        }
        }

        return 0
}

#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_precon() {

        templates=`ls *.tmpl 2>/dev/null | wc -l`
        if [ ${templates} -eq 0 ] ; then
                echo "There are no templates to process"
                return 1
        fi

        LDAP_SERVER_UP || {
                echo "LDAP server is not runningi: $?"
                return 1
        }

        LDAP_DOMAIN_EXISTS $LDAP_DOMAIN || {
                echo "$LDAP_DOMAIN does not exist"
                return 1
        }

        return 0
} 

#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	# Creating OSS ONLY user

        templ=1522-01.tmpl
        expfile=1522-01.exp
        infile=1522-01.in
        cat ${templ} > ${infile}
		
		#Creating User to assign aliases to them
		
        ${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_ADDUSER} -n t152201 -s 2000 -e 3000 -d vts.com  " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
        echo "######################################################"
        echo "Creating OSS ONLY user"
        echo "######################################################"
        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Creation of OSS user: retval $?"
                        }

        # Creating 2 and 2 aliases

        templ=1522-02.tmpl
        expfile=1522-02.exp
        infile=1522-02.in
	cat ${templ} > ${infile}
		${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_COM} -a role -R role15221,role15222 -d vts.com " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
                        echo "######################################################"
                        echo "Creating Role role152201 and role152202"
                        echo "######################################################"
                        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Creating Roles : retval $?"
                                                
                        }
                
        for((i=1;i<=2;i++))
                do
                        ${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_COM} -a alias -A "alias1522$i" -R "role1522$i" -d vts.com " || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
                        echo "######################################################"
                        echo "Creating Alias alias1522$i with role role1522$i "
                        echo "######################################################"
                        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Creating Aliases : retval $?"
                                                continue
                        }
                done

                # Assigning  standalone aliases to user t152201
		templ=1522-03.tmpl
        expfile=1522-03.exp
        infile=1522-03.in
	cat ${templ} > ${infile}
        ${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_PRIVS} -a alias -f import_action1 -d vts.com" || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
                        echo "######################################################"
                        echo "Assigning Aliases to user $tuser "
                        echo "######################################################"
                        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Assigning Aliases : retval $?"
                        return 1
                        }
						
				# Assigning  target qualified aliases to user t152201

        ${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_PRIVS} -a alias -f import_action2 -d vts.com" || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
                        echo "######################################################"
                        echo "Assigning Target QLD Aliases to user $tuser "
                        echo "######################################################"
                        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Assigning Aliases : retval $?"
                        return 1
                        }
	# Removing  standalone aliases from user t152201
	templ=1522-04.tmpl
        expfile=1522-04.exp
        infile=1522-04.in
        cat ${templ} > ${infile}				
	${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_PRIVS} -r alias -f import_action3 -d vts.com" || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
                        echo "######################################################"
                        echo "Remvoing standalone alias from user $tuser "
                        echo "######################################################"
                        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Removing Aliases : retval $?"
                        return 1
                        }
						
				# Removing target qualified aliases to user t152201

        ${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_PRIVS} -r alias -f import_action4 -d vts.com" || {
                        echo "Could not create $expfile from $infile  : retval $?"
                        }
                        echo "######################################################"
                        echo "Assigning Aliases to user $tuser "
                        echo "######################################################"
                        /usr/local/bin/expect  ${expfile} >/dev/null || {
                        echo "Assigning Aliases : retval $?"
                        return 1
                        }
return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

        cnt=$(ldapsearch -p 389 -M -T -D "cn=Directory Manager" -w ldappass -b "uid=t152201,ou=people,dc=vts,dc=com" "ericssonUserAuthenticationScope=*" ericssonUserAuthorizationScope |grep ericssonUserAuthorizationScope |wc -l )
		if [ $cnt -ne 0 ]; then
			return 1
		fi
        return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	templ=1522-02.tmpl
	expfile=1522-02.exp
	infile=1522-02.in
	sed -e "s/^PPPPPPPP/${LDAP_SUPERUSER_PASSWD}/" < ${templ} > ${infile}
	${AT_BIN}/con_ex.bsh -d ${infile} -o ${expfile} -c "${PATH_COM} -r role -R role15221,role15222 -d vts.com " || {
    		echo "Could not create $expfile from $infile  : retval $?"
   	 }
    	echo "######################################################"
    	echo "Deleting Roles "
    	echo "######################################################"
    
	/usr/local/bin/expect  ${expfile} >/dev/null || {
        echo "Deleting Roles : retval $?"
      }
	 rm -f *.in *.exp || {
                echo "Problems removing temporary files"
                return 1
        }
        if ! LDAP_SERVER_UP ; then
                echo "LDAP server is not running"
        fi
        
	LDAP_USER_EXISTS $LDAP_DOMAIN $tuser && {
                echo "Deleting user $tuser"
                LDAP_DELETE_USER $LDAP_DOMAIN $tuser || {
                        echo "Error while deleting user $tuser"
                        return 1
                        }
        }

	return 0

}
