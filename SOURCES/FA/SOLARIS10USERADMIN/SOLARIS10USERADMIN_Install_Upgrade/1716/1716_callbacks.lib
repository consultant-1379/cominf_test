#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	xsougha		First Version

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {
	return 0
}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {
	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {
        # Adding a user u1716nn
        ${AT_BIN}/con_ex.bsh -d 1716_add_user_u1716nn.in -o 1716_add_user_u1716nn.exp -c "/ericsson/sdee/bin/add_user.sh" 
        /usr/local/bin/expect 1716_add_user_u1716nn.exp
        CONSOLE_OUTPUT_CONTAINS "INFO: successfully added u1716nn" || {
                echo "Failed to add new user u1716nn"
                return 1
        }

        # Create a file for default security settings. This will not cause users to get locked out upon 3 or more unsuccessful login attempts
        echo "dn: cn=SecurityPolicy,dc=vts,dc=com
changetype: modify
replace: pwdLockOut
pwdLockOut: FALSE" > /var/tmp/1716_modify_security_settings.ldif

        # Modify the ldap security settings which will lock user accounts on 3 or more unsuccessful login attemps
        ldapmodify -D "cn=directory manager" -w ldappass -a -v -f /var/tmp/1716_modify_security_settings.ldif || {
                echo "Failed to perform ldapmodify of default user security settings"
                return 1
        }

        # Trying to perform 3 unsuccessful login attempts with incorrect password(s)
        ${AT_BIN}/con_ex.bsh -d 1716_login_u1716_unsuccessful.in -o 1716_login_u1716_unsuccessful.exp -c "ssh u1716nn@ossmaster"
        /usr/local/bin/expect 1716_login_u1716_unsuccessful.exp
        CONSOLE_OUTPUT_CONTAINS "Permission denied" || {
                echo "Failed to perform unsuccessful login attempts to ossmaster"
                return 1
        }

        # Trying to login to ossmaster using correct creds
        ${AT_BIN}/con_ex.bsh -d 1716_login_u1716_successful.in -o 1716_login_u1716_successful.exp -c "ssh u1716nn@ossmaster"
        /usr/local/bin/expect 1716_login_u1716_successful.exp
        CONSOLE_OUTPUT_CONTAINS "u1716nn@ossmaster" || {
                echo "Failed to login to ossmaster using correct creds"
                return 1
        }

        # Overwrite the file by desired security settings. This will cause users to get locked out upon 3 or more unsuccessful login attempts
        echo "dn: cn=SecurityPolicy,dc=vts,dc=com
changetype: modify
replace: pwdLockOut
pwdLockOut: TRUE" > /var/tmp/1716_modify_security_settings.ldif

        # Modify the ldap security settings which will lock user accounts on 3 or more unsuccessful login attempts
        ldapmodify -D "cn=directory manager" -w ldappass -a -v -f /var/tmp/1716_modify_security_settings.ldif || {
                echo "Failed to perform ldapmodify of default user security settings"
                return 1
        }

        # Adding a new user u1716n after user security settings have been locked
        ${AT_BIN}/con_ex.bsh -d 1716_add_user_u1716n.in -o 1716_add_user_u1716n.exp -c "/ericsson/sdee/bin/add_user.sh"
        /usr/local/bin/expect 1716_add_user_u1716n.exp
        CONSOLE_OUTPUT_CONTAINS "INFO: successfully added u1716n" || {
                echo "Failed to add new user u1716n"
                return 1
        }

        # Trying to perform 3 unsuccessful login attempts with incorrect password(s)
        ${AT_BIN}/con_ex.bsh -d 1716_login_u1716n_unsuccessful.in -o 1716_login_u1716n_unsuccessful.exp -c "ssh u1716n@ossmaster"
        /usr/local/bin/expect 1716_login_u1716n_unsuccessful.exp
        CONSOLE_OUTPUT_CONTAINS "Permission denied" || {
                echo "Failed to perform unsuccessful login attempts to ossmaster"
                return 1
        }

        # Performing a login attempt using correct credentials. Login should fail since account is locked out.
        ${AT_BIN}/con_ex.bsh -d 1716_login_u1716n_after_acc_lock.in -o 1716_login_u1716n_after_acc_lock.exp -c "ssh u1716n@ossmaster"
        /usr/local/bin/expect 1716_login_u1716n_after_acc_lock.exp 
	 CONSOLE_OUTPUT_CONTAINS "Permission denied" || {
                echo " login to ossmaster using correct creds is sucessful which is not acceptable"
                return 1
        }

        # Unlock user account by modify LDAP Security Settings
        echo "dn: cn=SecurityPolicy,dc=vts,dc=com
changetype: modify
replace: pwdLockOut
pwdLockOut: FALSE" > /var/tmp/1716_modify_security_settings.ldif

        # Modify the ldap security settings which will unlock user accounts on 3 or more unsuccessful login attempts
        ldapmodify -D "cn=directory manager" -w ldappass -a -v -f /var/tmp/1716_modify_security_settings.ldif || {
                echo "Failed to perform ldapmodify of default user security settings"
                return 1
        }

        # Create a new user u1716 with changed user security settings
        ${AT_BIN}/con_ex.bsh -d 1716_add_user_u1716.in -o 1716_add_user_u1716.exp -c "/ericsson/sdee/bin/add_user.sh"
        /usr/local/bin/expect 1716_add_user_u1716.exp
        CONSOLE_OUTPUT_CONTAINS "OK: Account created" || {
                echo "Failed to delete user u1716"
                return 1
        }


        # Attempting to change user password after successfully setting unlock attributes
        ${AT_BIN}/con_ex.bsh -d 1716_chg_user_password_u1716nn.in -o 1716_chg_user_password_u1716nn.exp -c "/ericsson/sdee/bin/chg_user_password.sh -u u1716nn"
        /usr/local/bin/expect 1716_chg_user_password_u1716nn.exp 
	CONSOLE_OUTPUT_CONTAINS "INFO: Local user [u1716nn] Type [OSS_ONLY] Domain [vts.com]: Password changed."|| {
                echo "Failed to change user password of u1716nn"
                return 1
        }

        # Performing a login attempt using correct credentials. Login should succeed with changed password.
        ${AT_BIN}/con_ex.bsh -d 1716_login_u1716nn_after_change_password.in -o 1716_login_u1716nn_after_change_password.exp -c "ssh u1716nn@ossmaster"
        /usr/local/bin/expect 1716_login_u1716nn_after_change_password.exp || { 
                echo "Failed to login to ossmaster using correct creds of u1716nn"
                return 1
        }

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {
	# Deleting user u1716
        ${AT_BIN}/con_ex.bsh -d 1716_del_user_u1716.in -o 1716_del_user_u1716.exp -c "/ericsson/sdee/bin/del_user.sh"
        /usr/local/bin/expect 1716_del_user_u1716.exp
        CONSOLE_OUTPUT_CONTAINS "OK: Account deleted" || {
                echo "Failed to delete user u1716"
                return 1
        }

        # Deleting user u1716n
        ${AT_BIN}/con_ex.bsh -d 1716_del_user_u1716n.in -o 1716_del_user_u1716n.exp -c "/ericsson/sdee/bin/del_user.sh"
        /usr/local/bin/expect 1716_del_user_u1716n.exp
        CONSOLE_OUTPUT_CONTAINS "OK: Account deleted" || {
                echo "Failed to delete user u1716n"
                return 1
        }

        # Deleting user u1716nn
        ${AT_BIN}/con_ex.bsh -d 1716_del_user_u1716nn.in -o 1716_del_user_u1716nn.exp -c "/ericsson/sdee/bin/del_user.sh"
        /usr/local/bin/expect 1716_del_user_u1716nn.exp
        CONSOLE_OUTPUT_CONTAINS "OK: Account deleted" || {
                echo "Failed to delete user u1716nn"
                return 1
        }

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {
	# Removing any temporary files used
	rm -rf /var/tmp/*.ldif *.exp

	return 0
}
