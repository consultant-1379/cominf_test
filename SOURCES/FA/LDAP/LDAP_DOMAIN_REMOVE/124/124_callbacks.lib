#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	# Replace PASSWD with the correct credentials
	sed -i "s/^PASSWD/$LDAP_SUPERUSER_PASSWD/g" *.in

	# If 1.com doesn't exist, create it.
	LDAP_DOMAIN_EXISTS "testdomain123.com" || {
		LDAP_CREATE_DOMAIN "testdomain123.com" || { echo "ERROR: Failed to create domain testdomain123.com" ; return 1; }
	}
	return 0
}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_precon() {

	LDAP_SERVER_UP || {
		echo "LDAP server not running"
		return 1
	}
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure

tc_test() {

	# Delete test domain
	LDAP_DELETE_DOMAIN "testdomain123.com" || { echo "ERROR: Failed to delete domain testdomain123.com" ; return 1; }
	# Try to delete test domain again
	LDAP_DELETE_DOMAIN "testdomain123.com" && { 
		echo "Deleting test domain twice did not yield non-zero return code"
		return 2
	}
	# Try to delete globaldomain
	LDAP_DELETE_DOMAIN "globaldomain" || {
		echo "Deleting globaldomain did not yield non-zero return code"
		return 3
	}
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
# The return code decides the final test case verdict.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	LDAP_DOMAIN_EXISTS || {
		LDAP_DELETE_DOMAIN "testdomain123.com" || { 
		echo "Deleting test domain  did not yield non-zero return code"
		return 2
	}
	return 0

}
