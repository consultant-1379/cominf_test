#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>
# 26-9-2012	xdansan		Adding a reserved user to a group

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

LDAP_BIN="/ericsson/sdee/bin"
GNAME="testgrp"
LDAPSRCH="/usr/bin/ldapsearch"
#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {



    

#-------------------------------------------------------------------------------
#  nmsadm is a reserved user. Add it to 1.com
#-------------------------------------------------------------------------------

    # Replace PASSWD with the correct credentials
    for ii in *.in; do
        sed "s/^PASSWD$/$LDAP_SUPERUSER_PASSWD/" $ii > $ii.tmp
    done

    echo "Creating nmsadm user"
    ${AT_BIN}/con_ex.bsh -d 299_user.in.tmp -o 299_user.exp -c "/ericsson/sdee/bin/add_user.sh  -d 1.com -n nmsadm" -r
    /usr/local/bin/expect 299_user.exp || {
        echo "Test user was not created, error code $?"
        return 1
    }

#-------------------------------------------------------------------------------
#  Create test group
#-------------------------------------------------------------------------------

	# Replace PASSWD with the correct credentials
	for ii in *.in; do
		sed "s/^PASSWD$/$LDAP_SUPERUSER_PASSWD/" $ii > $ii.tmp
	done

	echo "Creating test group in 1.com"
	${AT_BIN}/con_ex.bsh -d 299_add_group.in.tmp -o 299_expadd.exp -c "$LDAP_BIN/add_user.sh -d 1.com -n $GNAME -i 5201" -r
	/usr/local/bin/expect 299_expadd.exp || {
		echo "Attempted to create group $GNAME, but failed - FAIL"
		return 1
	}

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {



	LDAP_SERVER_UP || {
		echo "LDAP server not running"
		return 1
	}

#-------------------------------------------------------------------------------
#  Check test group is present
#-------------------------------------------------------------------------------

	echo "checking $GNAME in 1.com"
   	$LDAPSRCH -D "cn=Directory Manager" -w $LDAP_SUPERUSER_PASSWD -b "ou=group,dc=1,dc=com" "objectclass=*" | grep -w $GNAME > /dev/null 2>&1
	if [[ $? -ne 0 ]] ; then
		echo "The group $GNAME was NOT found in 1.com... This wasn't expected"
		return 1
	fi

#-------------------------------------------------------------------------------
#  Check the reserved user list
#-------------------------------------------------------------------------------

    echo "checking nmsadm user"
    grep nmsadm /ericsson/sdee/etc/reserved_users || {
        echo "nmsadm not present in the reserved_users list"
        return 1
    }

#-------------------------------------------------------------------------------
#  Reserved user is present in a domain
#-------------------------------------------------------------------------------

    $LDAPSRCH -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b ou=people,dc=1,dc=com '(objectclass=posixAccount)' | grep nmsadm || {
        echo "nmsadm user not present in domain ... This wasn't expected"
        return 1
    }

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

#-------------------------------------------------------------------------------
#   Adding a reserved user to a group
#-------------------------------------------------------------------------------

	echo "adding a test user to a group..."
	${AT_BIN}/con_ex.bsh -d 299_add_user.in.tmp -o 299_add_user.exp -c "$LDAP_BIN/add_user_to_group.sh -d 1.com -g $GNAME -u nmsadm -y" -r
	/usr/local/bin/expect 299_add_user.exp || {
		echo "Test user was not added to the $GNAME group, error code $?"
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

#-------------------------------------------------------------------------------
#  Check nmsadm is a member of testgrp
#-------------------------------------------------------------------------------

	echo "checking nmsadm is a secondary member of $GNAME in 1.com ..."
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=nmsadm,ou=people,dc=1,dc=com objectclass=* | grep "gidNumber: $GNAME" || {
		echo "nmsadm was not added to $GNAME in 1.com ... This wasn't expected"
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {



    

	return 0

}
