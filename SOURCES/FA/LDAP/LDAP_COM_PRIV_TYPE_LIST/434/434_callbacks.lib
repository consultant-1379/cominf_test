#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>
# 21-9-12	xbahzam		Initial version

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	[ -x /ericsson/sdee/bin/manage_COM_privs.bsh ] || { echo /ericsson/sdee/bin/manage_COM_privs.bsh not found; return 1; }
	
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	# run the command with -h option
	/ericsson/sdee/bin/manage_COM_privs.bsh -h
	return $?

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	helpOutput=( "Usage:  manage_COM_privs.bsh"
"-a alias [-d <domain>] [-u <user>] [-A <alias1>,<alias2>...] [-y]"
 "-a alias -d <domain> -f <batch_file> [-y]"
 "-a role [-d <domain>] [-u <user>] [-R <role1>,<role2>...] [-y]"
 "-a role -d <domain> -f <batch_file> [-y]"
 "-a target [-d <domain>] [-u <user>] [-T <target1>,<target2>...] [-y]"
 "-a target -d <domain> -f <batch_file> [-y]"
 "-r alias [-d <domain>] [-u <user>] [-A <alias1>,<alias2>...] [-y]"
 "-r alias -d <domain> -f <batch_file> [-y]"
 "-r role [-d <domain>] [-u <user>] [-R <role1>,<role2>...] [-y]"
 "-r role -d <domain> -f <batch_file> [-y]"
 "-r target [-d <domain>] [-u <user>] [-T <target1>,<target2>...] [-y]"
 "-r target -d <domain> -f <batch_file> [-y]"
 "-l [-d <domain>] [-u <user>]"
 "-l [-d <domain>] [-t <usertype>]"
 "-h"
"Basic description of manage_COM_privs.bsh functionality.")
	
	numOfMessages=${#helpOutput[*]}

	for ((i=0; i<${numOfMessages}; i++)); do
		CONSOLE_OUTPUT_CONTAINS "${helpOutput[$i]}"
		[ $? -eq 0 ] || { echo " console did not contain the the expected help message: ${helpOutput[$i]}"; return `expr ${i} + 1`; }
		echo "FOUND: ${helpOutput[$i]}"
	done

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	return 0

}
