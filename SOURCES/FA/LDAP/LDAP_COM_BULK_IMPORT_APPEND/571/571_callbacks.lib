#!/bin/bash
#################################################################################
#
#
#	   COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#	   The copyright to the document(s) herein is the property of
#	   Ericsson Radio Systems AB, Sweden.
#
#	   The document(s) may be used and/or copied only with the written
#	   permission from Ericsson Radio Systems AB or in accordance with
#	   the terms and conditions stipulated in the agreement/contract
#	   under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 8-10-2012	xamamcg		test multiple alias lines allowed with -y

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

LDAP_BIN="/ericsson/sdee/bin"
#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {



	

	# Replace PASSWD with the correct credentials
	for ii in *.in; do
		sed "s/^PASSWD$/$LDAP_SUPERUSER_PASSWD/" $ii > $ii.tmp
	done
	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {



	LDAP_SERVER_UP || {
		echo "LDAP is not running. LDAP_SERVER_UP returned $?" 
		return 1
	}

#-------------------------------------------------------------------------------
#  check alias1 is not listed
#-------------------------------------------------------------------------------

	${AT_BIN}/con_ex.bsh -d 571_list.in.tmp -o 571_list.exp -c "$LDAP_BIN/manage_COM.bsh -l alias -d 1.com"
	/usr/local/bin/expect 571_list.exp > alias.out || { echo "List alias failed"; return 2; }
	grep alias5711 alias.out && {
		echo "alias1 is listed, this wasn't expected ..."
		return 1
	}
	grep alias5712 alias.out && {
		echo "alias2 is listed, this wasn't expected ..."
		return 2
	}
	grep alias5713 alias.out && {
		echo "alias3 is listed, this wasn't expected ..."
		return 3
	}

#-------------------------------------------------------------------------------
#  check role1 is not listed
#-------------------------------------------------------------------------------

	${AT_BIN}/con_ex.bsh -d 571_list.in.tmp -o 571_list.exp -c "$LDAP_BIN/manage_COM.bsh -l role -d 1.com"
	/usr/local/bin/expect 571_list.exp > role.out || { echo "list role failed"; return 2; }
	grep role5711 role.out && {
		echo "role1 is listed, this wasn't expected ..."
		return 1
	}
	grep role5712 role.out && {
		echo "role2 is listed, this wasn't expected ..."
		return 2
	}
	grep role5713 role.out && {
		echo "role3 is listed, this wasn't expected ..."
		return 3
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#	SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {


#-------------------------------------------------------------------------------
#  test with a valid file
#-------------------------------------------------------------------------------

	${AT_BIN}/con_ex.bsh -d 571_bulk.in.tmp -o 571_bulk.exp -c "$LDAP_BIN/manage_COM.bsh -a import -d 1.com -f bulk1.txt -y"
	/usr/local/bin/expect 571_bulk.exp || {
		echo "file couldn't be imported, rc $?"
		return 1
	}

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

#-------------------------------------------------------------------------------
#  chech alias1,alias2,alias3 is listed
#-------------------------------------------------------------------------------

	${AT_BIN}/con_ex.bsh -d 571_list.in.tmp -o 571_list.exp -c "$LDAP_BIN/manage_COM.bsh -l alias -d 1.com"
	/usr/local/bin/expect 571_list.exp > alias.out
	
	grep alias5711 alias.out|| {
		echo "alias5711 couldn't be listed"
		return 1
	}
	grep alias5712 alias.out|| {
		echo "alias5712 couldn't be listed"
		return 2
	}
	grep alias5713 alias.out|| {
		echo "alias5713 couldn't be listed"
		return 3
	}


#-------------------------------------------------------------------------------
#  check role1,role2,role3 is listed 
#-------------------------------------------------------------------------------

	${AT_BIN}/con_ex.bsh -d 571_list.in.tmp -o 571_list.exp -c "$LDAP_BIN/manage_COM.bsh -l role -d 1.com"
	/usr/local/bin/expect 571_list.exp > list.out

	grep role5711 list.out || {
		echo "role1 couldn't be listed, rc $?"
		return 1
	}
	grep role5712 list.out || {
		echo "role2 couldn't be listed, rc $?"
		return 2
	}
	grep role5713 list.out || {
		echo "role3 couldn't be listed, rc $?"
		return 3
	}



	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {



	${AT_BIN}/con_ex.bsh -d 571_remove_role.in.tmp -o remove_role.exp -c "$LDAP_BIN/manage_COM.bsh -r role -d 1.com -y " -r
    /usr/local/bin/expect remove_role.exp && {
        # Failed to remove role
        echo "Remove role role5711,role5712,role5713 from 1.com domain name failed - rc $?"
		return 1
    }
	   
	rm -f *.out
	rm -f *.exp
	rm -f *.tmp
	return 0
}
