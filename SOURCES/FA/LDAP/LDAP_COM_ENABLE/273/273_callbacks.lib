#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>
# 29-Aug-2012	xfeldan	Initial version

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result
COM_GROUPNAME=com
#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	

	# Replace PASSWD with the correct credentials
	for ii in *.in; do
		sed "s/^PASSWD$/$LDAP_SUPERUSER_PASSWD/" $ii > $ii.tmp
	done

	#If enablecom.com doesn't exist, create it.
	LDAP_DOMAIN_EXISTS "enablecom.com" || {
		LDAP_CREATE_DOMAIN "enablecom.com" || { echo "ERROR: Failed to create domain enablecom.com" ; return 1; }
	}

	# Delete com group in test domain"
	/usr/bin/ldapdelete -p $LDAP_PORT -w $LDAP_SUPERUSER_PASSWD -D "cn=directory manager" cn=$COM_GROUPNAME,ou=group,dc=enablecom,dc=com || {
		echo "ldapdelete group com from domain, enablecom.com, failed with error code $?"
		return 3
	}

	# Wait
	sleep 4

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	[ -x /ericsson/sdee/bin/enable_COM.bsh ] || {
		echo "/ericsson/sdee/bin/enable_COM.bsh executable not found"
		return 1
	}
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	echo "Run enable_COM without arguments"
	${AT_BIN}/con_ex.bsh -d enablecom.in.tmp -o /usr/local/bin/expect.exp -c "/ericsson/sdee/bin/enable_COM.bsh"
	/usr/local/bin/expect /usr/local/bin/expect.exp 2>/dev/null >output.tmp|| {
		echo "enable_COM returned error code $?, output was:"
		tr -d '\015' < output.tmp
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	grep "COM has now been enabled." output.tmp>/dev/null || {
		echo "Failed to find \"COM has now been enabled.\" in output of enable_COM"
		tr -d '\015' < output.tmp
		return 1
	}

	# Check log file for string
	grep "Successfully added COM group." $(ls -t /ericsson/sdee/log/enable_COM.bsh*|head -1)>/dev/null || {
		echo "Failed to find \"Successfully added COM group.\" in log file for enable_COM"
		echo "Output in file $(ls -t /ericsson/sdee/log/enable_COM.bsh*|head -1) was:"
		cat $(ls -t /ericsson/sdee/log/enable_COM.bsh*|head -1)
		return 2
	}

	# Check that com group was created
	/usr/bin/ldapsearch -D "cn=directory manager" -s base -w $LDAP_SUPERUSER_PASSWD -b "cn=$COM_GROUPNAME,ou=group,dc=enablecom,dc=com" "objectclass=posixGroup" dn || {
		echo "ERROR: com group was not migrated"
		return 3
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	# Delete test domain
	LDAP_DELETE_DOMAIN "enablecom.com" || { echo "ERROR: Failed to delete domain enablecom.com" ; return 1; }
	rc=0

	rm -f *.tmp *.exp
	return $rc

}
