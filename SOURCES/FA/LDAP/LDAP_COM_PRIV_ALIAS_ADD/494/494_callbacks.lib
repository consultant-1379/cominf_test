#!/bin/bash
#################################################################################
#
#
#	   COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#	   The copyright to the document(s) herein is the property of
#	   Ericsson Radio Systems AB, Sweden.
#
#	   The document(s) may be used and/or copied only with the written
#	   permission from Ericsson Radio Systems AB or in accordance with
#	   the terms and conditions stipulated in the agreement/contract
#	   under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 20/09/13	xkalbha		Initial test for adding duplicate and multiple alias

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {



	# Replace PASSWD with the correct credentials
	for ii in *.in; do
		sed "s/^PASSWD$/$LDAP_SUPERUSER_PASSWD/" $ii > $ii.tmp
	done

	# Create the nms group if it doesn't already exist
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b dc=1,dc=com objectclass=* | grep nms > u550.out || {

		echo "Need to  create nms group"
		# Create the nms group
		CMD='/ericsson/sdee/bin/add_group.sh -d 1.com -n nms -y'
		${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494nms.exp -c "$CMD" || {
			echo "Failed to generate /usr/local/bin/expect script, $?"
			return 3
		} 

		/usr/local/bin/expect 494nms.exp || { 
			echo "Failed to create nms group, error code $?"
			return 4
		}
	}
#-------------------------------------------------------------------------------
# Create a test user  
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/add_user.sh -t COM_ONLY -d 1.com -n u494 -i 1494 -C bhavana -y'
	${AT_BIN}/con_ex.bsh -d 494adduser.in.tmp -o 494adduser.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 1
	}

	/usr/local/bin/expect 494adduser.exp && {
		echo "Failed to create user, error code $?"
		return 2
	}
	
#-------------------------------------------------------------------------------
# Create a test role
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a role -d 1.com -R role494a -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 3
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create role, error code $?"
		return 4
	}
#-------------------------------------------------------------------------------
# Create a 2nd test role
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a role -d 1.com -R role494b -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 5
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create role, error code $?"
		return 6
	}
#-------------------------------------------------------------------------------
# Create a 3rd test role
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a role -d 1.com -R role494c -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 7
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create role, error code $?"
		return 8
	}

#-------------------------------------------------------------------------------
# Create a 4th test role
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a role -d 1.com -R role494d -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 9
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create role, error code $?"
		return 10
	}

#-------------------------------------------------------------------------------
# Create a test alias
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a alias -d 1.com -A alias494a -R role494a -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 11
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create alias, error code $?"
		return 12
	}
#-------------------------------------------------------------------------------
# Create a 2nd test alias
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a alias -d 1.com -A alias494b -R role494b -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 13
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create alias, error code $?"
		return 14
	}

#-------------------------------------------------------------------------------
# Create a 3rd test alias
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a alias -d 1.com -A alias494c -R role494c -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 15
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create alias, error code $?"
		return 16
	}
#-------------------------------------------------------------------------------
# Create a 4th test alias
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a alias -d 1.com -A alias494d -R role494d -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 17
	}

	/usr/local/bin/expect 494addrole.exp || {
		echo "Failed to create alias, error code $?"
		return 18
	}


#-------------------------------------------------------------------------------
# Create a test target
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a target -d 1.com -u u494 -T target1 -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494addtarget.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 19
	}

	/usr/local/bin/expect 494addtarget.exp || {
		echo "Failed to create target, error code $?"
		return 20
	}
	
#-------------------------------------------------------------------------------
# Create a 2nd test user  
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/add_user.sh -t COM_ONLY -d 1.com -n u494b -i 2494 -C bhavana -y'
	${AT_BIN}/con_ex.bsh -d 494adduser.in.tmp -o 494adduser.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 21
	}

	/usr/local/bin/expect 494adduser.exp && {
		echo "Failed to create user, error code $?"
		return 22
	}
	return 0
}

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

#-------------------------------------------------------------------------------
#  Check LDAP is running
#-------------------------------------------------------------------------------

	LDAP_SERVER_UP || {
		echo "LDAP server not running"
		return 1
	}

#-------------------------------------------------------------------------------
#  Test user is present
#-------------------------------------------------------------------------------

	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u494,ou=people,dc=1,dc=com objectclass=* > u494.out || {
		echo "Failed to do LDAP search"
		return 1
	}
	grep 'ericssonUserAuthenticationScope: target1' u494.out || {
		echo "Failed to find target1 for user u494"
		return 2
	}
	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b cn=role494a,ou=role,ou=com,dc=1,dc=com objectclass=* | grep 'cn: role494a' || {
		echo "Failed to find 494a"
		return 3
	}

	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b cn=role494b,ou=role,ou=com,dc=1,dc=com objectclass=* | grep 'cn: role494b' || {
		echo "Failed to find 494b"
		return 4
	}

	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b cn=role494c,ou=role,ou=com,dc=1,dc=com objectclass=* | grep 'cn: role494c' || {
		echo "Failed to find 494c"
		return 5
	}

	/usr/bin/ldapsearch   -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b cn=role494d,ou=role,ou=com,dc=1,dc=com objectclass=* | grep 'cn: role494d' || {
		echo "Failed to find 494d"
		return 6
	}

	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b role=alias494a,ou=rolealias,ou=com,dc=1,dc=com objectclass=* | grep 'role: alias494a' || {
		echo "Failed to find alias494a"
		return 7
	}
	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b role=alias494b,ou=rolealias,ou=com,dc=1,dc=com objectclass=* | grep 'role: alias494b' || {
		echo "Failed to find alias494b"
		return 8
	}
	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b role=alias494c,ou=rolealias,ou=com,dc=1,dc=com objectclass=* | grep 'role: alias494c' || {
		echo "Failed to find alias494c"
		return 9
	}
	/usr/bin/ldapsearch  -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b role=alias494d,ou=rolealias,ou=com,dc=1,dc=com objectclass=* | grep 'role: alias494d' || {
		echo "Failed to find alias494d"
		return 10
	}
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u494b,ou=people,dc=1,dc=com objectclass=* > u494.out || {
		echo "Failed to do LDAP search"
		return 11
	}
	grep 'ericssonUserAuthenticationScope' u494.out && {
		echo "Found authentication for user u494b"
		return 12
	}
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#	SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias -d 1.com -u u494 -A alias494a,alias494b,alias494c -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 1
	}

	/usr/local/bin/expect 494.exp || {
		echo "Failed to add alias to user, error code $?"
		return 2
	}

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias -d 1.com -u u494 -A alias494b -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 3
	}

	/usr/local/bin/expect 494.exp
	retval=$?
	[ $retval -ne 1 ] || {
		echo "Wrong return on add duplicate alias to user, error code $?"
		return 4
	}

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias -d 1.com -u u494 -A alias494c,alias494d,alias494NEW -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 5
	}

	/usr/local/bin/expect 494.exp || {
		echo "Failed to add duplicate and new alias to user, error code $?"
		return 6
	}

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias -d 1.com -u u494 -A alias494d,alias494NEW2 -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 7
	}

	/usr/local/bin/expect 494.exp
	retval=$?
	[ $retval -ne 1 ] || {
		echo "Wrong error when add duplicate and alias not in domain, error code $?"
		return 8
	}

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias -d 1.com -u u494b -A target1:alias494a,target2:alias494b,target1:alias494c -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 9
	}

	/usr/local/bin/expect 494.exp || {
		echo "Failed to add alias to user, error code $?"
		return 10
	}

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	LDAP_USER_EXISTS 1.com u494 || {
		echo "Test user does not exist, $?"
		return 1
	}

	

	

	/usr/bin/ldapsearch   -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u494,ou=people,dc=1,dc=com objectclass=* > ldap494.out || {
		echo "Ldap search for user failed $?"
		return 9
	}

	grep "ericssonUserAuthorizationScope: alias494a" ldap494.out || {
		echo "u494 user does not have alias 494a ... This wasn't expected"
		return 10
	}

	grep "ericssonUserAuthorizationScope: alias494b" ldap494.out || {
		echo "u494 user does not have alias 494b ... This wasn't expected"
		return 11
	}

	grep "ericssonUserAuthorizationScope: alias494c" ldap494.out || {
		echo "u494 user does not have alias 494c ... This wasn't expected"
		return 12
	}

	grep "ericssonUserAuthorizationScope: alias494d" ldap494.out || {
		echo "u494 user does not have alias 494d ... This wasn't expected"
		return 13
	}

	grep "alias494NEW" ldap494.out && {
		echo "Found alias494NEW ... This wasn't expected"
		return 14
	}
	LDAP_USER_EXISTS 1.com u494b || {
		echo "Test user does not exist, $?"
		return 15
	}


	CONSOLE_OUTPUT_CONTAINS "WARNING : alias [alias494b] already exists in u494's alias list - ignored." || { echo "No duplicate error msg"; return 20; }
	CONSOLE_OUTPUT_CONTAINS "WARNING : alias [alias494c] already exists in u494's alias list - ignored." || { echo "No duplicate error msg"; return 21; }
	CONSOLE_OUTPUT_CONTAINS "WARNING : [alias494NEW] does not exist in 1.com's alias list - ignored." || { echo "No alias does not exist msg"; return 22; }

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	CMD='/ericsson/sdee/bin/del_user.sh -d 1.com -n u494 -y'
        ${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || { echo "Failed to generate the expect script, $?"; }
        /usr/local/bin/expect 494.exp > /dev/null || { echo "Failed to delete user u494, $?"; return 1; }
		
		
	CMD='/ericsson/sdee/bin/manage_COM.bsh -r role -d 1.com -R role494a -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494delrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 2
	}

	/usr/local/bin/expect 494delrole.exp || {
		echo "Failed to create role, error code $?"
		return 3
	}
	
	CMD='/ericsson/sdee/bin/del_user.sh -d 1.com -n u494b -y'
        ${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494.exp -c "$CMD" || { echo "Failed to generate the expect script, $?"; }
        /usr/local/bin/expect 494.exp > /dev/null || { echo "Failed to delete user u494b, $?"; return 4; }
		
	
	CMD='/ericsson/sdee/bin/manage_COM.bsh -r role -d 1.com -R role494b -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494delrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 5
	}

	/usr/local/bin/expect 494delrole.exp || {
		echo "Failed to create role, error code $?"
		return 6
	}
	CMD='/ericsson/sdee/bin/manage_COM.bsh -r role -d 1.com -R role494c -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494delrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 7
	}

	/usr/local/bin/expect 494delrole.exp || {
		echo "Failed to create role, error code $?"
		return 8
	}
	CMD='/ericsson/sdee/bin/manage_COM.bsh -r role -d 1.com -R role494d -y'
	${AT_BIN}/con_ex.bsh -d 494.in.tmp -o 494delrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 9
	}

	/usr/local/bin/expect 494delrole.exp || {
		echo "Failed to create role, error code $?"
		return 4
	}
		
	# Remove temporary files
	rm -f *.exp
	rm -f *.out
}
