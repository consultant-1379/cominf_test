#!/bin/bash
#################################################################################
#
#
#	   COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#	   The copyright to the document(s) herein is the property of
#	   Ericsson Radio Systems AB, Sweden.
#
#	   The document(s) may be used and/or copied only with the written
#	   permission from Ericsson Radio Systems AB or in accordance with
#	   the terms and conditions stipulated in the agreement/contract
#	   under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 28/09/12	xamamcg		Initial test for add alias interactively

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {





	
	# Replace PASSWD with the correct credentials or data
	for ii in *.in; do
		sed -e "s/^PASSWD$/$LDAP_SUPERUSER_PASSWD/" $ii > $ii.tmp || {
			echo "Failed to replace LDAP superuser password holder etc in /usr/local/bin/expect input file $ii, rc $?"
			return 2
		}
	done

#-------------------------------------------------------------------------------
# Create a test user  
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/add_user.sh -t COM_ONLY -d 1.com -n u533a -i 1533 -C bhavana -y'
	${AT_BIN}/con_ex.bsh -d 533adduser.in.tmp -o 533adduser.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 1
	}

	/usr/local/bin/expect 533adduser.exp && {
		echo "Failed to create user, error code $?"
		return 2
	}
	
#-------------------------------------------------------------------------------
# Create a test role
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a role -d 1.com -R r533a -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 3
	}

	/usr/local/bin/expect 533addrole.exp || {
		echo "Failed to create role, error code $?"
		return 4
	}
#-------------------------------------------------------------------------------
# Create a 2nd test role
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a role -d 1.com -R r533b -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533addrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 5
	}

	/usr/local/bin/expect 533addrole.exp || {
		echo "Failed to create role, error code $?"
		return 6
	}
#-------------------------------------------------------------------------------
# Create a 2nd test user  
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/add_user.sh -t COM_ONLY -d 1.com -n u533b -i 2533 -C bhavana -y'
	${AT_BIN}/con_ex.bsh -d 533adduser.in.tmp -o 533adduser.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 7
	}

	/usr/local/bin/expect 533adduser.exp && {
		echo "Failed to create user, error code $?"
		return 8
	}
#-------------------------------------------------------------------------------
# Create a test target
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a target -d 1.com -u u533b -T target1 -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533addtarget.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 9
	}

	/usr/local/bin/expect 533addtarget.exp || {
		echo "Failed to create target, error code $?"
		return 10
	}
	
#-------------------------------------------------------------------------------
# Create a test alias
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a alias -d 1.com -A a533a -R r533a -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533baddalias.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 11
	}

	/usr/local/bin/expect 533baddalias.exp || {
		echo "Failed to create alias, error code $?"
		return 12
	}

#-------------------------------------------------------------------------------
# Create a 2nd test alias
#-------------------------------------------------------------------------------

	CMD='/ericsson/sdee/bin/manage_COM.bsh -a alias -d 1.com -A a533b -R r533a,r533b -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533baddalias.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 13
	}

	/usr/local/bin/expect 533baddalias.exp || {
		echo "Failed to create alias, error code $?"
		return 14
	}


	return 0
}

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

#-------------------------------------------------------------------------------
#  Check LDAP is running
#-------------------------------------------------------------------------------

	LDAP_SERVER_UP || {
		echo "LDAP server not running"
		return 1
	}

	# Check user u533a exists
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u533a,ou=people,dc=1,dc=com objectclass=* > u533.out || {
		echo "Failed to do LDAP search"
		return 1
	}
	# Check user u533a has no targets
	grep 'ericssonUserAuthenticationScope' u533.out && {
		echo "Found authentication scope for u533a"
		return 2
	}
	# Check role role533a exists
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b cn=r533a,ou=role,ou=com,dc=1,dc=com objectclass=* | grep 'cn: r533a' || {
		echo "Failed to find 533a"
		return 3
	}
	# Check role r533b exists
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b cn=r533b,ou=role,ou=com,dc=1,dc=com objectclass=* | grep 'cn: r533b' || {
		echo "Failed to find 533b"
		return 4
	}
	# Check user u533b exists
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u533b,ou=people,dc=1,dc=com objectclass=* > u533b.out || {
		echo "Failed to do LDAP search for u533b"
		return 5
	}
	# Check user u533b has target
	grep 'ericssonUserAuthenticationScope: target1' u533b.out || {
		echo "Failed to find target1 for user u533b"
		return 6
	}
	# Check alias a533a exists
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b role=a533a,ou=rolealias,ou=com,dc=1,dc=com objectclass=* | grep 'role: a533a' || {
		echo "Failed to find alias 533a"
		return 7
	}
	# Check alias a533b exists
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b role=a533b,ou=rolealias,ou=com,dc=1,dc=com objectclass=* | grep 'role: a533b' || {
		echo "Failed to find alias 533b"
		return 9
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#	SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias'
	${AT_BIN}/con_ex.bsh -d 533add.in.tmp -o 533.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 1
	}

	/usr/local/bin/expect 533.exp || {
		echo "Failed to add alias to user, error code $?"
		return 2
	}

	CMD='/ericsson/sdee/bin/manage_COM_privs.bsh -a alias'
	${AT_BIN}/con_ex.bsh -d 533add2.in.tmp -o 533b.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 3
	}

	/usr/local/bin/expect 533b.exp || {
		echo "Failed to add alias to user, error code $?"
		return 4
	}
	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	LDAP_USER_EXISTS 1.com u533a || {
		echo "Test user does not exist, $?"
		return 1
	}

	

	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u533a,ou=people,dc=1,dc=com objectclass=* | grep "ericssonUserAuthorizationScope: target1:a533a" || {
		echo "u533a user does not have alias ... This wasn't expected"
		return 5
	}
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u533a,ou=people,dc=1,dc=com objectclass=* | grep "ericssonUserAuthorizationScope: target2:a533b" || {
		echo "u533a user does not have alias ... This wasn't expected"
		return 6
	}
	LDAP_USER_EXISTS 1.com u533b || {
		echo "Test user does not exist, $?"
		return 7
	}

	
	
	/usr/bin/ldapsearch -D 'cn=Directory Manager' -w $LDAP_SUPERUSER_PASSWD -b uid=u533b,ou=people,dc=1,dc=com objectclass=* | grep "ericssonUserAuthorizationScope: a533a" || {
		echo "u533b user does not have alias ... This wasn't expected"
		return 10
	}
	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {


	CMD='/ericsson/sdee/bin/del_user.sh -d 1.com -n u533a -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533deluser.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 1
	}

	/usr/local/bin/expect 533deluser.exp || {
		echo "Failed to delete user, error code $?"
		return 2
	}
	CMD='/ericsson/sdee/bin/del_user.sh -d 1.com -n u533b -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533deluser.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 1
	}

	/usr/local/bin/expect 533deluser.exp || {
		echo "Failed to delete user, error code $?"
		return 2
	}
	
	CMD='/ericsson/sdee/bin/manage_COM.bsh -r role -d 1.com -R r533a -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533remrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 3
	}

	/usr/local/bin/expect 533remrole.exp || {
		echo "Failed to delete role, error code $?"
		return 4
	}
	CMD='/ericsson/sdee/bin/manage_COM.bsh -r role -d 1.com -R r533b -y'
	${AT_BIN}/con_ex.bsh -d 533.in.tmp -o 533remrole.exp -c "$CMD" || {
		echo "Failed to generate /usr/local/bin/expect script, $?"
		return 3
	}

	/usr/local/bin/expect 533remrole.exp || {
		echo "Failed to delete role, error code $?"
		return 4
	}
	
	# Remove temporary files
	rm -f *.exp
	rm -f *.out
}
