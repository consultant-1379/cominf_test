#!/bin/bash
#################################################################################
#
#
#	   COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#	   The copyright to the document(s) herein is the property of
#	   Ericsson Radio Systems AB, Sweden.
#
#	   The document(s) may be used and/or copied only with the written
#	   permission from Ericsson Radio Systems AB or in accordance with
#	   the terms and conditions stipulated in the agreement/contract
#	   under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 18/09/2012	xsimrea		Run "modif_aif.sh" and "configure_smrs.sh modify aif.bsh" as not root and not nmsadm

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup()		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

# global Variables for this test
BADUSR=posix424

OUTFILE=pswdout.tmp

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0	failure
 
tc_precon() {

	TEST_SOLARIS || { echo "Not Solaris"; return 1; }

	grep smrs_master "/etc/inet/hosts" || { echo "No smrs_master created"; return 1; }

	# Attempt to force the password on the non-AIF user
	/opt/ericsson/nms_bismrs_mc/bin/modify_aif.sh -a $BADUSR -p $AIFPASSWD1 && {
		echo "Problem, successfully initialised password for non-AIF user $BADUSR"; return 2
	}

	# create a POSIX user
	#useradd -m $BADUSR || { echo "Could not add user $BADUSR, rc $?"; return 3; }


	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#	SPEC_TC_TEST_PASSCODE	success
# != SPEC_TC_TEST_PASSCODE	failure
 
tc_test() {
	# Run configure_smrs.sh to modify the POSIX user
	cmd="/opt/ericsson/nms_bismrs_mc/bin/configure_smrs.sh modify aif"

	# Run modify commands to change password using configure_smrs.sh
	cat > 424_modaif.tmp <<EOF
What is the name for this user
$BADUSR
What is the new password for this user
$AIFPASSWD2
Please confirm the new password for this user
$AIFPASSWD2
EOF
	${AT_BIN}/con_ex.bsh -d 424_modaif.tmp -o 424_modaif.exp -c "${cmd}" || {
		echo "Failed to create expect script, rc $?"; return 2
	}
	
	/usr/local/bin/expect 424_modaif.exp > 424_cnfout.tmp && {
		echo "Erroneously ran expect script with configure_smrs.sh to change password for POSIX user $BADUSR, output:" >> $OUTFILE; cat 424_cnfout.tmp >> $OUTFILE; : return 2
	}


	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0	failure

tc_postcon() {

	rc=0

	[ -s $OUTFILE ] && { echo Errors in modify_aif checks; cat $OUTFILE; echo End errors; rc=18; }

	return $rc
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0	failure

tc_cleanup() {

	return 0

}
