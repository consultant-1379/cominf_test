#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 23-07-12	xkalbha	  initial version

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	cp /etc/inet/hosts /etc/inet/hosts.bkp
	sed -e "s/smrs_master/smrs_mas/" /etc/inet/hosts  > /etc/inet/hosts.tmp
	mv /etc/inet/hosts.tmp /etc/inet/hosts
	grep "smrs_master" /etc/inet/hosts >& /dev/null && { echo "Found smrs_master in /etc/inet/hosts"; return 2; }
	#CLEANUP_SMRS smrs_master oss1 y y y y || { echo "Failed to cleanup SMRS master" ; return 3; }
	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {


	#check have nedss config file for this OSS maser
	name=`hostname`
	filename="nedss_config.$name"
	[ -r $filename ] || { echo "NEDSS config $filename does not exist"; return 2; }

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {


	# copy to nedss_config.valid correct nedss file 
	name=`hostname`
	filename="nedss_config.$name"
	cp $filename "nedss_config.valid"

    # Run con_ex.bsh to create expect script
    # 161.in is checked into GIT and has the name and prompt values

    cmd='/opt/ericsson/nms_bismrs_mc/bin/configure_smrs.sh add nedss -f nedss_config.valid'

    ${AT_BIN}/con_ex.bsh -d 161.in -o 161.exp -c "${cmd}"
    retval=$?
    [ $retval -ne 0 ] && { echo Failed to create expect script $retval; return 2; }

    /usr/local/bin/expect 161.exp
	[ $? -eq 0 ] && { echo main command returned 0 while invalid; return 3; }
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	CONSOLE_OUTPUT_CONTAINS "ERROR Unable to find config file /ericsson/smrs/etc/smrs_config on smrs_master"
	[ $? -eq 0 ] || { echo "Adding NEDSS without adding SMRS Master test failed"; return 1; }
	mv /etc/inet/hosts.bkp /etc/inet/hosts
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {


	rm -f 161.exp

	return 0

}
