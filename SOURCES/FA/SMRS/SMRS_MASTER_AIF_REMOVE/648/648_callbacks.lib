#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

# DEFINITIONS
USER=user648
source /etc/opt/ericsson/nms_bismrs_mc/smrs_config

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	# create a test user to delete
	cmd='/opt/ericsson/nms_bismrs_mc/bin/configure_smrs.sh add aif'
	${AT_BIN}/con_ex.bsh -o 648.exp -d 648_create_user.in -c "${cmd}"
	/usr/local/bin/expect 648.exp || {
		echo failed to create user
		return 1
	}

	# delete the user on the nedss servers
	for ip in ${SMRS_SLAVE_SERVICE_NEDSS_IP[@]}
	do
		ssh -o "BatchMode=yes" smrs_master "ssh -o 'BatchMode=yes' $ip userdel $USER" || {
			echo WARNING: $USER not found on $ip
		}
	done
	
	# delete the user
    cmd='/opt/ericsson/nms_bismrs_mc/bin/configure_smrs.sh delete aif'
	${AT_BIN}/con_ex.bsh -d 648_delete_user.in -o 648.exp -c "${cmd}"
	/usr/local/bin/expect 648.exp || {
		echo failed to delete user $USER
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	# check to make sure user does not exist
	echo checking for existence of $USER on NEDSS 
	for ip in ${SMRS_SLAVE_SERVICE_NEDSS_IP[@]}
		do
		ssh -o "BatchMode=yes" smrs_master "ssh -o 'BatchMode=yes' $ip grep $USER /etc/passwd" && {
		echo $USER exists on $ip
		return 1
	}
	done
	ssh -o "BatchMode=yes" smrs_master id $USER && {
		echo $USER exists on smrs_master
	    return 1
	}
	
	# make sure that the ftp services have been deleted
	for u in ${SMRS_SLAVE_SERVICE_LRAN_AIF_FTPSERVICES[@]} ${SMRS_SLAVE_SERVICE_WRAN_AIF_FTPSERVICES[@]} ${SMRS_SLAVE_SERVICE_GRAN_AIF_FTPSERVICES[@]}
	do
		[ $u == $USER ] && {
			echo $USER is still configured for ftp services
			return 1
		}
	done

	/opt/ericsson/nms_cif_cs/etc/unsupported/bin/cstest -s ONRM_CS lt FtpService | grep "=${USER}$" && {
		echo $USER still exists in ONRM
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	return 0

}
