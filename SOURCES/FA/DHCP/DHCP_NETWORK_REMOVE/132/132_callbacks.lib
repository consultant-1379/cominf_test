#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 2012-08-09    xfeldan    Initial version

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	# Add network using ai_manager script (quiet mode)
	DHCP_NETWORK_EXISTS 234.234.232.0 &>/dev/null || {
		/ericsson/ocs/bin/ai_manager.sh -add net -a 234.234.232.0 -m 255.255.248.0 -r 234.234.234.234 -d conservapedia.org -n 1.1.1.1 -q &>/dev/null || {
			echo "Error creating test network, error code $?"
			return 1
		}
	}
	/etc/rc2.d/S96dhcpd stop || {
		echo "Unable to stop DHCP services"
		return 2
	}
	return 0
}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	DHCP_SERVER_INSTALLED || {
		echo "DHCP server not installed"
		return 1
	}

	DHCP_SERVER_RUNNING && {
		echo "DHCP server still running"
		return 2
	}
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	# Try to remove network with DHCP service not running
	${AT_BIN}/con_ex.bsh -d delete.in -o expect.exp -c "/ericsson/ocs/bin/ai_manager.sh -delete net -a 234.234.232.0 -q"
	/usr/local/bin/expect expect.exp &>/dev/null && {
		echo "Deletion of test network with DHCP service down executed successfully?"
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	/etc/rc2.d/S96dhcpd start || {
		echo "Unable to start up DHCP Services"
		return 1
	}
	# Delete test network if it failed to delete in the Test
	DHCP_NETWORK_EXISTS 234.234.232.0 && {
		echo "Test Network still exists, deleting...."
		/ericsson/ocs/bin/ai_manager.sh -delete net -a 234.234.232.0 -q || {
			echo "Unable to delete test network"
			return 2
		}
	}
	return 0
}
