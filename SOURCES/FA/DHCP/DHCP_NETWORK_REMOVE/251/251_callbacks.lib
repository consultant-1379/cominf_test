#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>
# 2012-08-17    xfeldan    Initial version

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	# Add network using ai_manager script (quiet mode)
	(DHCP_NETWORK_EXISTS 234.234.232.0 || /ericsson/ocs/bin/ai_manager.sh -add net -a 234.234.232.0 -m 255.255.248.0 -r 234.234.234.234 -d conservapedia.org -n 1.1.1.1) || {
		echo "Error creating test network, error code $?"
		return 1
	}

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	DHCP_SERVER_INSTALLED || {
		echo "DHCP server not installed"
		return 1
	}

	DHCP_SERVER_RUNNING || {
		echo "DHCP server not running"
		return 2
	}

	grep "om_serv_master" /ericsson/config/ericsson_use_config || {
	echo "Its not OM SERVICES SERVER"
	return 3
	}

	[ -n "$BSIM_USER" ] || {
		echo "\$BSIM_USER variable not defined"
		return 3
	}

	id $BSIM_USER&>/dev/null || {
		echo "BSIM user not present"
		return 4
	}
	echo "Creating a test network"
	/ericsson/ocs/bin/ai_manager.sh -add net -a 234.234.250.0 -m 255.255.255.0 -r 234.234.250.1 -d conservapedia.org -n 1.1.1.1

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	echo "Test 1: Try to delete non-existant network as $BSIM_USER"
	su - bsim -c "/ericsson/ocs/bin/ai_manager.sh -delete net -a 1.3.3.7" $BSIM_USER &>/dev/null&& {
		echo "Deletion of non-existant network did not return error code"
		return 1
	}

	echo "Test 2: Try to delete test network using ai_manager script (non-quiet mode) as $BSIM_USER, expect failure"
#	${AT_BIN}/con_ex.bsh -d delete.in -o expect.exp -c "/ericsson/ocs/bin/ai_manager.sh -delete net -a 234.234.232.0"
#	su -c "expect expect.exp" $BSIM_USER &>/dev/null&& {
	su - bsim -c "/ericsson/ocs/bin/ai_manager.sh -delete net -a 234.234.250.0" &>/dev/null&& {
		echo "Deleting test network as $BSIM_USER did not return error code"
		return 2
	}

	#echo "Test 3: Check network has not been deleted"
	#if ! $(DHCP_NETWORK_EXISTS 234.234.250.0); then
	#	echo "Test domain was deleted"
	#	return 3
	#fi

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	grep "#START of 234.234.250.0" /usr/local/etc/dhcpd.conf_subnet || {
		echo "Network entry was not found in /etc/dhcp/dhcpd.conf_subnet"
		cat /etc/dhcp/dhcpd.conf_subnet
		return 1
	}
	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	# Delete test network
	/ericsson/ocs/bin/ai_manager.sh -delete net -a 234.234.250.0
	return 0

}
