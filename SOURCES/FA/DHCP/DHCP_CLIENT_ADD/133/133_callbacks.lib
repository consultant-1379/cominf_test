#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# 2012-08-09    xfeldan    Initial version
# 2012-08-17    xsimrea    Added checks on GET_CONFIG_SECTION

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to clenup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

        # Need to add network first
        # -add net -a <ip address> -m <netmask> -r <router> -d <DNS domain name> -n "<DNS name servers>" -q
	l_cmd=`sed 's/DHCP_CONF=N\/A/DHCP_CONF=yes/' /ericsson/config/config.ini > /var/tmp/config.txt`
        cp /var/tmp/config.txt /ericsson/config/config.ini
        /ericsson/ocs/bin/setup_isc_dhcp.sh
        DHCP_NETWORK_EXISTS 114.41.95.0 &>/dev/null || {
		echo "Need to add a network first"
                /ericsson/ocs/bin/ai_manager.sh -add net -a 114.41.95.0 -m 255.255.255.0 -r 114.41.95.201 -d conservapedia.org -n "1.1.1.1" -q >/dev/null || {
                        echo "Error creating test network, error code $?"
                        return 3
                }
                touch created.tmp
        }

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	DHCP_SERVER_INSTALLED &>/dev/null || {
		echo "DHCP server not installed"
		return 1
	}

	DHCP_SERVER_RUNNING &>/dev/null || {
		echo "DHCP server not running"
		return 2
	}

	DHCP_NETWORK_EXISTS 114.41.95.0 &>/dev/null || {
		echo "DHCP network has not been added"
		return 3
	}
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	echo "Test 1: Adding client to netowrk"
	#-add client -a <ip address> -h <hostname> -i <client identifier> -s <SMRS server address> -p <summary path> -q
	/ericsson/ocs/bin/ai_manager.sh -add client -a 114.41.95.12 -h atrcxb12 -i MALAKAI -s 114.42.95.15 -p /var/tmp/test.xml -q || {
		echo "Error creating test client, error code $?"
		return 4
	}

	echo "Test 2: list client"
	# List the client
	/ericsson/ocs/bin/ai_manager.sh -list hosts|grep "MALAKAI" &>/dev/null || {
		echo "Test network was not lised"
		return 5
	}

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	DHCP_CLIENT_IN_CONFIG MALAKAI 114.41.95.12 &>/dev/null || {
		echo "Client does not exist"
		return 1
	}

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	# Remove test client
	/ericsson/ocs/bin/ai_manager.sh -delete client -i MALAKAI -q &>/dev/null || {
		echo "Cleanup Removal of Test Client was unsuccessful"
		return 7
	}

	# Remove network if it was created
	[ -r created.tmp ] && {
		/ericsson/ocs/bin/ai_manager.sh -delete net -a 114.41.95.0 -q &>/dev/null || {
			echo "Test network was not deleted in cleanup"
			return $?
		}
		rm created.tmp
	}

	return 0

}
