#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

        /ericsson/ocs/bin/ai_manager.sh -init > /dev/null
        [[ -f /usr/local/etc/dhcpd.conf ]] || {
                echo "Error in configuring DHCP server"
                return 1
        }
        return 0
}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

        /ericsson/ocs/bin/ai_manager.sh -list nets |grep 10.45.202.0 && {
                /ericsson/ocs/bin/ai_manager.sh -delete net -a 10.45.202.0 -q
        }

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	echo "Adding a Network"
	/ericsson/ocs/bin/ai_manager.sh -add net -a 10.45.202.0 -m 255.255.255.0 -r 10.45.202.1 -d dns.com -n "159.107.163.3,10.42.33.198" -q  || {
        echo "Error in adding network 10.45.202.0"
        return 1
	}
     
	echo "Adding Range to the network"
	/ericsson/ocs/bin/ai_manager.sh -add range -n 10.45.202.0 -r 10.45.202.1 -b  10.45.202.5 -e  10.45.202.8 -l 1200 -s 10.45.202.10 -t "10.45.202.12 10.45.202.13" -w "10.45.202.13" -q || {
	echo "Error in adding Range to the network 10.45.202.0"
	return 1
	}

	echo "Listing the added Networks"
	/ericsson/ocs/bin/ai_manager.sh -list nets || {
	echo "Error in listing the Network details"
	return 1
	}

	#Action1:
	echo "Verifying the IP that is in the Dynamic Range is valid for Assignment"
	/ericsson/ocs/bin/ai_manager.sh -check ip -a 10.45.202.6 && {
	echo " Error:Displaying IP that is in the Dynamic Range is valid for Assignment"
	return 1
	}
	echo "Verified that the IP in the Dynamic Range is not valid for Assignment"
	echo "---------------------------------------------------------------------"

	#Action2:
	echo "Verifying the IP that is not in the Dynamic Range is valid for Assignment"
	/ericsson/ocs/bin/ai_manager.sh -check ip -a 10.45.202.12 || {
	echo "Error:Displaying IP that is not in the Dynamic Range as not valid for Assignment"
	return 1
	}
	echo "---------------------------------------------------------------------"


	#Negative Testing:
	echo "Verifying -check ip function with Non numeric in the IP Address"
	/ericsson/ocs/bin/ai_manager.sh -check ip -a 10.xx.38.0 && {
	echo "Failed to validate the IP address" 
	return 1
	}
	
	echo "Verifying -check ip function with 4 octets in the IP Address"
	/ericsson/ocs/bin/ai_manager.sh -check ip -a 10.4238.0 && {
        echo "Failed to validate the IP address"
        return 1
        }

	echo "Verifying -check ip function with Out of range in the IP Address"
	/ericsson/ocs/bin/ai_manager.sh -check ip -a 10.42.999.50 && {
        echo "Failed to validate the IP address"
        return 1
        }

	return 0
}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

        echo  "Deleting the added network"
        /ericsson/ocs/bin/ai_manager.sh -delete net -a 10.45.202.0 -q || {
                echo " Error in delting the network "
                return 1
        }

	return 0
}
