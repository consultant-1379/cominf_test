#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	JAVA_VERSION_COMINF=1.6.0_33
		/usr/jdk/instances/java1.6.0/bin/java -version  || {

                        echo "Error with java package of cominf media in infra master"
                        return 1
                }

                CONSOLE_OUTPUT_CONTAINS "$JAVA_VERSION_COMINF" || {

                        echo " Java version was not $JAVA_VERSION_COMINF in infra master"
                        return 1
                }

                ssh omsrvs ./usr/jdk/instances/java1.6.0/bin/java -version || {

                        echo "Error with java package of cominf media in infra slave"
                        return 1
                }

                COUNT=$(grep -c "$JAVA_VERSION_COMINF" ${TC_CONSOLE_FILE})
                echo $COUNT

                [ $COUNT -eq 4 ] || {

                        echo "Java package was not $JAVA_VERSION_COMINF in infra_slave"
                        return 1
                }


#                          if [`java -version 2>&1|grep -c "1.6"` -eq 0 ] ; then
# 
#                             echo "Error in java package in infra_master"
#                            return 1
#                           fi
#
#        ssh omsrvs '
#                          if [`java -version 2>&1|grep -c "1.6"` -eq 0 ] ; then
#
#                             echo "Error in java package in infra_slave"
#                            return 1
#                           fi
#                             '
         return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	return 0

}
