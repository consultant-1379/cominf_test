#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result

#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	return 0

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {


	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {


        #Action1:- Checking option 8 of prepReplication
        ${AT_BIN}/con_ex.bsh -d 1760_prepReplicationm8.in -o 1760_prepReplicationm8.exp -c "/ericsson/sdee/bin/prepReplication.sh"
        /usr/local/bin/expect 1760_prepReplicationm8.exp || {
                echo "Error while running script prepReplication.sh in master with option 8"
                return 1
        }
        CONSOLE_OUTPUT_CONTAINS "192.168.0.4 192.168.0.7" || {
                echo "Default server list was not updated."
                return 1
        }
       
        #Action1:- Checking for errors in last executed prepReplication script
        VALUE=`ls -ltr /ericsson/sdee/log/prepReplication.sh_*|awk '{ print $9 }'|tail -1`;
        grep "ERROR" $VALUE && {
                echo "Error in the last executed prepReplication script"
                return 1
        }
        
        #Action2:- Checking the default server list with ldapsearch command
        ldapsearch -D "cn=directory manager" -w ldappass -b "cn=default,ou=profile,dc=vts,dc=com" "objectclass=*" "defaultServerList"
        CONSOLE_OUTPUT_CONTAINS "defaultServerList: 192.168.0.4 192.168.0.7" || {
        	echo "Error fetching default server list with ldapsearch command"
                return 1
        }
   
        #Action3:- Checking ldapclient list command on ldap client oss_master
        ssh ossmaster ldapclient list
        CONSOLE_OUTPUT_CONTAINS "NS_LDAP_SERVERS= 192.168.0.4, 192.168.0.7" || {
        	echo "Error fetching ldapserver list from ldapclient list command on oss_master"
                return 1
        }
     
        #Action3:- Checking ldapclient list command on ldap client uas
        ssh -o StrictHostKeyChecking=no ossmaster ldapclient list
        CONSOLE_OUTPUT_CONTAINS "NS_LDAP_SERVERS= 192.168.0.4, 192.168.0.7" || {
                echo "Error fetching ldapserver list from ldapclient list command on UAS"
                return 1
        }
        
        return 0 

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {
        
        rm -rf *.exp
	return 0

}
