#!/bin/bash
#################################################################################
#
#
#       COPYRIGHT (C) ERICSSON RADIO SYSTEMS AB, Sweden
#
#       The copyright to the document(s) herein is the property of
#       Ericsson Radio Systems AB, Sweden.
#
#       The document(s) may be used and/or copied only with the written
#       permission from Ericsson Radio Systems AB or in accordance with
#       the terms and conditions stipulated in the agreement/contract
#       under which the document(s) have been supplied.
#
#################################################################################


# ATCOMINF Test Callback Library

# Revision History
# <date>	<signum>	<details>

# Complete the callbacks in this library to automate the test case.
#
# Callbacks are stateless, it is not possible to set a global variable in one callback 
# and access it it in another.
#
# Callbacks are called by the test harness in the following order:
#
# tc_setup() 		# Called only for independent TC execution mode to setup TC
# tc_precon()		# Conditions that should exist before TC can run
# tc_test()		# Runs the test for this TC
# tc_postcon()		# Conditions that should/should not exist after successful TC 
# tc_cleanup()		# Called only for independent TC execution mode to cleanup after TC

# All callbacks must PASS for a TC PASS result
#Sourcing env file
. /var/tmp/platform_taf/harness/etc/DDC.env


#################################################################################
#
# CALLBACK: TC_SETUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_setup() {

	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required

# BEGIN_PRE_CONDITIONS
        #for SERVER in $SC1HOST
        #do
            # DDC Service is running on the SC in question
           # $_ECHO "[$SERVER] Checking DDC Service"
            #[[ $($_SSH $SC1HOST "$_PS -ef|$_EGREP -i /etc/init.d/ddc|$_GREP -v grep |$_WC -l") != 1 ]] && return $FAIL
        #done
	#return $PASS
         

        # BEGIN_PRE_CONDITIONS
        #for SERVER in $SC1HOST
        #do
            # DDC Service is running on the SC in question
            $_ECHO "[$SERVER] Checking DDC Service"
            ONLINE=$( $_PS -ef|$_EGREP -i /etc/init.d/ddc|$_GREP -v grep |$_WC -l)



             if (( $ONLINE != 1)); then
                 echo "DDC is not online"
                return $FAIL
             fi


        return $PASS

}
#################################################################################

#################################################################################
#
# CALLBACK: TC_PRECON
#
# This callback function checks the correct conditions exist to run the TC.
#
# Return or exit codes:
#  0	success
# >0 	failure
 
tc_precon() {

	# Coded to fail in case TC_AUTOMATED=1 before automation completed
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_TEST
#
# This callback function runs the test.
# The harness compares the return code to the SPEC_TC_TEST_PASSCODE value set in the test spec.
#
# Return or exit codes:
#    SPEC_TC_TEST_PASSCODE 	success
# != SPEC_TC_TEST_PASSCODE 	failure
 
tc_test() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete
	# Change return code as required
      
       MYDATE=$(/bin/date +%d%m%y)
       HOST="atrcxb2554"
    
       LITP_VERSION_DIR="/var/ericsson/ddc_data/"$HOST"_TOR/$MYDATE/TOR/sw_inventory"
       LITP_version="/LITP_version" 
       PASS=0
       FAIL=1


       LIST=$($_SSH $HOST ls -a /opt/ericsson/nms/litp/)
       $_ECHO $LIST
        if [[ $LIST = *.version* ]] 
        then
            if [ -e $LITP_VERSION_DIR/$LITP_version ]
                then
                   $_ECHO "LITP_verison file exist in $LITP_VERSION_DIR"
                    return $PASS
            else
                   $_ECHO "LITP_version file cannot be found in $LITP_VERSION_DIR"
                   return $FAIL
            fi         
         else
                $_ECHO "Directory is Empty: There are no files from which data can be collected"
                return $PASS
         fi
	
        return $FAIL

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_POSTCON
#
# This callback function checks expected results.
#
# Return or exit codes:
#  0	success
# >0 	failure

tc_postcon() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete.
	# Change return code as required

	return 0

}
#################################################################################


#################################################################################
#
# CALLBACK: TC_CLEANUP
#
# This callback function is only called if the harness execution mode is 'AT_INDEPENDENT'
# 
# This callback restores the target system to the state it was in before the TC 
# was run. It rolls back changes made by callbacks tc_setup() and tc_test()
# 
# Return or exit codes:
#  0	success
# >0 	failure

tc_cleanup() {

	# Coded to fail in case TC_AUTOMATED=1 before automation complete
	# Change return code as required

	return 0

}
